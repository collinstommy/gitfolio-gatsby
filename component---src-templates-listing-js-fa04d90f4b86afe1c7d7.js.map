{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/components/about-item.js","webpack:///./src/components/theme.js","webpack:///./src/components/card.js","webpack:///./src/templates/listing.js"],"names":["SEO","_ref","description","lang","meta","title","site","_2417117884","data","metaDescription","siteMetadata","react_default","a","createElement","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","AboutItem","text","icon","style","display","className","LightTheme","createGlobalStyle","_templateObject","props","backgroundImage","DarkTheme","_templateObject2","Theme","theme","Card","html_url","language","stargazers_count","forks_count","key","href","target","__webpack_exports__","pageContext","_pageContext$data","repos","user","company","email","blog","location","hireable","_data$site$siteMetada","hireText","Fragment","components_theme","seo","id","background","avatar_url","login","bio","about_item","map","repo","card","query"],"mappings":"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","file":"component---src-templates-listing-js-fa04d90f4b86afe1c7d7.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AboutItem = ({ text, icon }) => {\n  if (!text) return null;\n  return (\n    <span style={{ display: 'block' }}>\n      <i className={`fas fa-${icon}`}></i>\n      &nbsp; {text}\n    </span>\n  );\n};\n\nAboutItem.propTypes = {\n  text: PropTypes.string,\n  icon: PropTypes.string,\n};\n\nexport default AboutItem;\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components'\n\nconst LightTheme = createGlobalStyle`\n  :root {\n    --bg-color: #fff;\n    --text-color: rgb(10, 10, 10);\n    --blog-gray-color: rgb(80, 80, 80);\n    --background-image: linear-gradient(90deg, rgba(10, 10, 10, 0.4), rgb(10, 10, 10, 0.4)), url(${props => props.backgroundImage});\n    --background-background: #fff;\n  }\n`;\n\nconst DarkTheme = createGlobalStyle`\n  :root {\n    --bg-color: rgb(10, 10, 10);\n    --text-color: #fff;\n    --blog-gray-color: rgb(180, 180, 180);\n    --background-image: linear-gradient(90deg, rgba(10, 10, 10, 0.6), rgb(10, 10, 10, 1)), url(${props => props.backgroundImage});\n    --background-background: linear-gradient(0deg, rgba(10, 10, 10, 1), rgba(10, 10, 10, 0.6)),\n      url(${props => props.backgroundImage});\n    --height: 50vh;\n  }\n\n  #display h1 {\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: #fff;\n  }\n  #blog-display h1 {\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: #fff;\n  }\n  .projects section {\n    background: rgb(20, 20, 20);\n  }\n  #blog_section section {\n    background: rgb(20, 20, 20);\n  }\n`;\n\nconst Theme = ({ theme, backgroundImage }) => theme === \"light\"\n  ? <LightTheme backgroundImage={backgroundImage} />\n  : <DarkTheme backgroundImage={backgroundImage} />\n\nexport default Theme;\n","import React from 'react';\n\nconst Card = ({\n  name,\n  html_url,\n  description,\n  language,\n  stargazers_count,\n  forks_count,\n}) => {\n  return (<a key={name} href={html_url} target=\"_blank\">\n    <section>\n      <div className=\"section_title\">{name}</div>\n      <div className=\"about_section\">\n        <span>{description}</span>\n      </div>\n      <div className=\"bottom_section\">\n        {language &&\n          <span style={{ display: 'inline-block' }}>\n            <i className=\"fas fa-code\"></i>\n            &nbsp; {language}\n          </span>}\n        <span><i className=\"fas fa-star\"></i>&nbsp; {stargazers_count}</span>\n        <span><i className=\"fas fa-code-branch\"></i>&nbsp; {forks_count}</span>\n      </div>\n    </section>\n  </a>);\n};\n\nexport default Card;\n","/* Based on https://github.com/imfunniee/gitfolio/ */\n\nimport React from 'react';\nimport '../../node_modules/@fortawesome/fontawesome-free/css/all.css';\nimport SEO from '../components/seo';\nimport AboutItem from '../components/about-item';\nimport Theme from '../components/theme';\nimport { graphql } from 'gatsby';\nimport Card from '../components/card';\n\nexport default ({ pageContext, data }) => {\n  const { repos, user } = pageContext.data;\n  const { company, email, blog, location, hireable } = user;\n  const { theme, backgroundImage } = data.site.siteMetadata\n  const hireText = hireable ? 'Available for Hire' : '';\n\n  return (\n    <React.Fragment>\n      <Theme backgroundImage={backgroundImage} theme={theme} />\n      <SEO title=\"Porfolio\" />\n      <section className=\"main\">\n        <div id=\"profile\">\n          <div id=\"profile_img\" style={{ background: `url(${user.avatar_url})` }}></div>\n          <div id=\"username\"><span style={{ display: 'block' }}>{user.name}</span>@{user.login}</div>\n          <div id=\"userbio\" style={{ display: 'block' }}>{user.bio}</div>\n          <div id=\"about\">\n            <AboutItem text={company} icon=\"useres\" />\n            <AboutItem text={email} icon=\"envelope\" />\n            <AboutItem text={blog} icon=\"link\" />\n            <AboutItem text={location} icon=\"map-marker-alt\" />\n            <AboutItem text={hireText} icon=\"user-tie\" />\n          </div>\n        </div>\n        <div id=\"display\">\n          <div id=\"work\">\n            <h1>Work.</h1>\n            <div className=\"projects\" id=\"work_section\">\n              {repos.map(repo => <Card {...repo} />)}\n            </div>\n          </div>\n        </div>\n      </section>\n    </React.Fragment>\n  )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        backgroundImage\n        theme\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}